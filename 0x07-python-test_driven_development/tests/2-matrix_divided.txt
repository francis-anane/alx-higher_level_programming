""" >>> import doctest
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided(matrix, 10)
[[0.1, 0.2, 0.3], [0.4, 0.5, 0.6]]
>>> matrix_divided([[77, 36, 15], [10, 34, 89]], float("inf"))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
>>> matrix_divided([[77, 36, 15], [10, 34, 89]], -float("inf"))
[[-0.0, -0.0, -0.0], [-0.0, -0.0, -0.0]]
>>> try:
...     matrix_divided(matrix, 0)
... except Exception as e:
...     print(e)
...
division by zero
>>> try:
...     matrix_divided(matrix, None)
... except Exception as e:
...     print(e)
...
div must be a number
>>> try:
...     matrix_divided(None, 10)
... except Exception as e:
...     print(e)
...
matrix must be a matrix (list of lists) of integers/floats
>>> try:
...     matrix_divided([4, 3, 5], 2)
... except Exception as e:
...     print(e)
...
matrix must be a matrix (list of lists) of integers/floats
>>> matrix.append([9, 3, 8, 7])
>>> try:
...	matrix_divided(matrix, 10)
... except Exception as e:
... 	print(e)
...
Each row of the matrix must have the same size
>>> try:
...     matrix_divided([[2, 4, 5], [12, "34", 7], [9, 34, 54]], 4)
... except Exception as e:
...     print(e)
...
matrix must be a matrix (list of lists) of integers/floats
>>> try:
...     matrix_divided([[2, 4, 5], [12, 34, 7], [9, 34, 54]], "4")
... except Exception as e:
...     print(e)
...
div must be a number
>>> try:
...     matrix_divided([4, 3, 5])
... except Exception as e:
...     print(e)
...
matrix_divided() missing 1 required positional argument: 'div'
>>> try:
...     matrix_divided()
... except Exception as e:
...     print(e)
...
matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

"""
